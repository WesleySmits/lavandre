name: Deploy to WP Engine Staging Environment

on:
  push:
    branches: [staging]

jobs:    
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Git fetch and unshallow
        run: git fetch --prune --unshallow
      
      - name: Set-up front-end dependencies
        run: |
          # Navigate to theme folder
          cd wp-content/themes/lavandre
          
          # Install dependencies
          npx yarn

          # Build production assets
          npx yarn prod
          
          # Run JS unit tests
          npx yarn test
      - name: Push to WP Engine & Install Composer Dependencies
        run: |
          # Where we'll store our two SSH keys.
          SSH_PATH="$HOME/.ssh"

          # WP Engine's Git host.
          WPE_GIT_HOST="git.wpengine.com"

          # WP Engine's server SSH host.
          WPE_SSH_HOST="lavandrestage.ssh.wpengine.net"

          # WP Engine's environment.
          WPE_ENVIRONMENT="staging"

          # Our site name within WP Engine.
          WPE_SITE_NAME="lavandrestage"

          # The file SSH uses to verify validity of hosts.
          KNOWN_HOSTS_PATH="$SSH_PATH/known_hosts"

          # Path to private SSH key used to authenticate w/ WP Engine's Git host.
          SSH_PRIVATE_GIT_KEY_PATH=$SSH_PATH/wpegitkey

          # Path to private SSH key used to authenticate w/ WP Engine's server.
          SSH_PRIVATE_ACCOUNT_KEY_PATH=$SSH_PATH/wpeaccountkey

          # The directory within WP Engine's server where our site files live.
          DEPLOYMENT_DIRECTORY="sites/lavandrestage"

          # Explicitly create the `known_hosts` file, since the next command
          # will assume it exists & attempt to append do it.
          mkdir $SSH_PATH && touch $KNOWN_HOSTS_PATH

          # Add our hosts to the `known_hosts` file.
          ssh-keyscan -t rsa "$WPE_GIT_HOST" >> "$KNOWN_HOSTS_PATH"
          ssh-keyscan -t rsa "$WPE_SSH_HOST" >> "$KNOWN_HOSTS_PATH"

          # Write our SSH keys to the appropriate files.
          echo "${{ secrets.SSH_PRIVATE_GIT_KEY }}" > "$SSH_PRIVATE_GIT_KEY_PATH"
          echo "${{ secrets.SSH_PRIVATE_ACCOUNT_KEY }}" > "$SSH_PRIVATE_ACCOUNT_KEY_PATH"

          # Set file permissions.
          chmod 700 "$SSH_PATH"
          chmod 644 "$KNOWN_HOSTS_PATH"
          chmod 600 "$SSH_PRIVATE_GIT_KEY_PATH"
          chmod 600 "$SSH_PRIVATE_ACCOUNT_KEY_PATH"

          # Push code to WP Engine's Git host, which will deploy it to the server.
          git config core.sshCommand "ssh -i $SSH_PRIVATE_GIT_KEY_PATH -o UserKnownHostsFile=$KNOWN_HOSTS_PATH"
          git remote add $WPE_ENVIRONMENT git@$WPE_GIT_HOST:production/$WPE_SITE_NAME.git

          git status
          git remote -v
          git branch -a

          git push $WPE_ENVIRONMENT HEAD:staging --force

          # Authenticate with WP Engine's server to install Composer dependencies.
          ssh $WPE_SITE_NAME@$WPE_SSH_HOST -i $SSH_PRIVATE_ACCOUNT_KEY_PATH -o UserKnownHostsFile=$KNOWN_HOSTS_PATH << EOF
            # Navigate to the directory in which our site files live.
            cd $DEPLOYMENT_DIRECTORY

            # Download the Composer installer & execute it.
            curl -s https://getcomposer.org/installer | php

            # Install production dependencies.
            php composer.phar install --no-dev

            # Clean up.
            rm composer.phar
          EOF
