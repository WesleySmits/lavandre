(window.webpackJsonp=window.webpackJsonp||[]).push([["productDetail"],{"59Rd":function(t,n,e){"use strict";e.r(n),e.d(n,"default",(function(){return productDetail_ProductDetail}));var a=e("Gi9F"),o=e("RfZo"),i=e("T8im"),r=e("tBEf");class AjaxAddToCart_AjaxAddToCart extends a.a{constructor(t){super(),this.ajaxEndpoint=window.location.origin+"/wp-admin/admin-ajax.php",this.button=t}initialize(){this.button.addEventListener("click",t=>{var n;t.preventDefault();const e=this.button.closest("form"),a=Number(null===(n=null==e?void 0:e.querySelector('input[name="quantity"]'))||void 0===n?void 0:n.value)||1,o={action:"ajaxaddtocart",product_id:this.button.value,quantity:a.toString()};return Object(r.a)(o,this.ajaxEndpoint,null,this.onSuccess.bind(this),this.onFailure.bind(this),void 0,this.button),!1})}onSuccess(t){if(!1===t.success)throw new Error("something is wrong");o.a.openSidePanel("cart-panel"),t.data.cartAmount&&Object(i.a)(t.data.cartAmount)}onFailure(){const t=this.button.closest("form");null!==t&&t.submit()}static onInit(t=document){const n=t.querySelector('button[name="add-to-cart"]');if(null===n)return;new AjaxAddToCart_AjaxAddToCart(n).initialize()}}var u=e("kR8q"),c=e("Q0Az");class productDetail_ProductDetail extends c.a{constructor(){super(...arguments),this.components=[AjaxAddToCart_AjaxAddToCart,u.a]}}!function productDetailInit(){(new productDetail_ProductDetail).initialize()}()},T8im:function(t,n,e){"use strict";function addOrUpdateCartTotals(t){const n=document.querySelector(".cart-amount-icon");if(null===n)throw new Error("No cart amount wrapper found");let e=n.querySelector(".cart-amount-counter");t&&"0"!==t?(null===e&&(e=document.createElement("SPAN"),e.classList.add("cart-amount-counter"),n.appendChild(e)),e.innerText=t):null==e||e.remove()}e.d(n,"a",(function(){return addOrUpdateCartTotals}))},kR8q:function(t,n,e){"use strict";e.d(n,"a",(function(){return AmountSelector}));var a=e("Gi9F"),o=e("tNnY");class AmountSelector extends a.a{constructor(t=document.body){super(),this.buttons=[],this.eventEmitter=o.a,this.handleClick=t=>{const n=t.target;if(!n||!n.parentElement)return;const e=n.parentElement.querySelector(".qty");e&&e instanceof HTMLInputElement&&this.changeAmount(n,e)},this.buttons=Array.from(t.querySelectorAll(".plus-amount, .minus-amount"))}initialize(){const eventListener=t=>{const n=t.target;n&&(+n.value>+n.max&&(n.value=n.max),+n.value<+n.min&&(n.value=n.min),this.eventEmitter.emit("amount-changed",t.target))},t=Array.from(document.querySelectorAll("input.qty"));for(let n=0;n<t.length;n++){const e=t[n];e.removeEventListener("change",eventListener),e.addEventListener("change",eventListener)}for(let t=0;t<this.buttons.length;t++){const n=this.buttons[t];n.removeEventListener("click",this.handleClick.bind(this)),n.addEventListener("click",this.handleClick.bind(this))}}changeAmount(t,n){let e=Number(n.value);const a=Number(n.getAttribute("step"));t.classList.contains("plus-amount")?e+=a:e-=a,n.value=e.toString(),n.dispatchEvent(new Event("change"))}static onInit(){(new AmountSelector).initialize()}}}},[["59Rd","runtime",0]]]);